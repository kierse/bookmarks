TODO
====
- look at using Fields method on Message object instead of passing fields has to Message constructor from
all child classes.
- fields method would have to maintain a hash identified by calling child class.
- every call to fields method would overwrite all previous data for calling class
- make sure logger and model are only being loaded once
- UNIVERSAL::require errors are not being properly thrown and caught
- update DBIx::Class error handling so that we don't get nested exceptions
  - change the anonymous sub that wraps the default DBIx::Class exception in Schema.pm
- create a standard exception message lookup process. Eg. Invalid write permission on Model::File
- create sql debug handler that writes sql statements to log using log4perl
- have to return ID's for all objects created in database otherwise clients won't know
  how to refer to them later.
- create signal handler for __DIE__ that gets set by main controller.
  - should make backup existing signal handler and restore before controller exits
- look into DBIx::Class caching abilities
- expand bookmark test to include bookmark position other than 0
- look at spliting Handler::Bookmark methods and have one method (parent, position) call the other (lft, rgt, level)
- implement allowable_procedure and describe service methods (see JSON::RPC::MyApp for examples)

